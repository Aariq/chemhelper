% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chem_scale.R
\name{chem_scale}
\alias{chem_scale}
\title{Scaling Functions for Metabolomics}
\usage{
chem_scale(x, center = TRUE, scale = c("auto", "pareto", "range",
  "vast", "level", "none"))
}
\arguments{
\item{x}{a vector}

\item{center}{logical. Do you want to apply centering?}

\item{scale}{choice of scaling functions.  Defaults to autoscaling (dividing by standard deviation). See details for more.}
}
\value{
Scaled vector with attributes showing the scaling and centering parameters
}
\description{
Provides additional scaling functions besides autoscaling.  Reviewed in van den \href{https://doi.org/10.1186/1471-2164-7-142}{Berg et al. 2006}.
}
\details{
Currently the choices for \code{scale =} allow for all of the scaling methods reviewed in
Berg et al. 2006. \emph{Centering, scaling, and transformations: improving the biological information content of metabolomics data.}
BMC Genomics 7:142. Autoscaling divides each number by the column standard deviation.
Pareto scaling divides each number by the square root of the column standard deviation.
Compared to autoscaling, this stays closer to the original measurments, but is highly sensitive to large fold changes.
Range scaling divides the numbers by the column range, which may be useful in cases when scaling relative to a biologically possible
range is desired, however this method is highly sensitive to outliers. Vast scaling multiplies the autoscaled results
by the ratio of the column mean or some group mean to the column/group standard deviation. With this method, one could take knowledge
of groups into account, although this isn't currently implemented in this function.  Level scaling simply divides by the column mean,
transforming values into relative responses.
}
\examples{
x = c(0, 0.1, 0.2, 10)
y = c(1000, 1232, 2022, 4000)

chem_scale(x, center = TRUE, scale = "auto")
chem_scale(y, center = TRUE, scale = "pareto")

}
